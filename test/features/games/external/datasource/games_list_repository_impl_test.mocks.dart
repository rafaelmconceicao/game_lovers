// Mocks generated by Mockito 5.3.0 from annotations
// in game_lovers/test/features/games/external/datasource/games_list_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:game_lovers/src/utils/api_client/api_client.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDio_1 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_2<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [APIClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIClient extends _i1.Mock implements _i3.APIClient {
  MockAPIClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
          Invocation.getter(#options),
          returnValue: _FakeBaseOptions_0(this, Invocation.getter(#options)))
      as _i2.BaseOptions);
  @override
  set options(_i2.BaseOptions? _options) =>
      super.noSuchMethod(Invocation.setter(#options, _options),
          returnValueForMissingStub: null);
  @override
  _i2.Dio instance() => (super.noSuchMethod(Invocation.method(#instance, []),
          returnValue: _FakeDio_1(this, Invocation.method(#instance, [])))
      as _i2.Dio);
  @override
  _i4.Future<_i2.Response<T>> post<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i2.Options? options,
          _i2.CancelToken? cancelToken,
          _i2.ProgressCallback? onSendProgress,
          _i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#post, [
            path
          ], {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: _i4.Future<_i2.Response<T>>.value(_FakeResponse_2<T>(
              this,
              Invocation.method(#post, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              })))) as _i4.Future<_i2.Response<T>>);
}
